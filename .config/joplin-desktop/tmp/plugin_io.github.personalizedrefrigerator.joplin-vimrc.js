(()=>{"use strict";var e={775:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=joplin},200:(e,t)=>{var n,o,i,r,a,l,d,c,u,s;Object.defineProperty(t,"__esModule",{value:!0}),t.ContentScriptType=t.SettingStorage=t.AppType=t.SettingItemSubType=t.SettingItemType=t.ToolbarButtonLocation=t.isContextMenuItemLocation=t.MenuItemLocation=t.ModelType=t.ImportModuleOutputFormat=t.FileSystemItem=void 0,(s=t.FileSystemItem||(t.FileSystemItem={})).File="file",s.Directory="directory",(u=t.ImportModuleOutputFormat||(t.ImportModuleOutputFormat={})).Markdown="md",u.Html="html",(c=t.ModelType||(t.ModelType={}))[c.Note=1]="Note",c[c.Folder=2]="Folder",c[c.Setting=3]="Setting",c[c.Resource=4]="Resource",c[c.Tag=5]="Tag",c[c.NoteTag=6]="NoteTag",c[c.Search=7]="Search",c[c.Alarm=8]="Alarm",c[c.MasterKey=9]="MasterKey",c[c.ItemChange=10]="ItemChange",c[c.NoteResource=11]="NoteResource",c[c.ResourceLocalState=12]="ResourceLocalState",c[c.Revision=13]="Revision",c[c.Migration=14]="Migration",c[c.SmartFilter=15]="SmartFilter",c[c.Command=16]="Command",function(e){e.File="file",e.Edit="edit",e.View="view",e.Note="note",e.Tools="tools",e.Help="help",e.Context="context",e.NoteListContextMenu="noteListContextMenu",e.EditorContextMenu="editorContextMenu",e.FolderContextMenu="folderContextMenu",e.TagContextMenu="tagContextMenu"}(n=t.MenuItemLocation||(t.MenuItemLocation={})),t.isContextMenuItemLocation=function(e){return[n.Context,n.NoteListContextMenu,n.EditorContextMenu,n.FolderContextMenu,n.TagContextMenu].includes(e)},(d=t.ToolbarButtonLocation||(t.ToolbarButtonLocation={})).NoteToolbar="noteToolbar",d.EditorToolbar="editorToolbar",(l=t.SettingItemType||(t.SettingItemType={}))[l.Int=1]="Int",l[l.String=2]="String",l[l.Bool=3]="Bool",l[l.Array=4]="Array",l[l.Object=5]="Object",l[l.Button=6]="Button",(a=t.SettingItemSubType||(t.SettingItemSubType={})).FilePathAndArgs="file_path_and_args",a.FilePath="file_path",a.DirectoryPath="directory_path",(r=t.AppType||(t.AppType={})).Desktop="desktop",r.Mobile="mobile",r.Cli="cli",(i=t.SettingStorage||(t.SettingStorage={}))[i.Database=1]="Database",i[i.File=2]="File",(o=t.ContentScriptType||(t.ContentScriptType={})).MarkdownItPlugin="markdownItPlugin",o.CodeMirrorPlugin="codeMirrorPlugin"},607:function(e,t,n){var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(i,r){function a(e){try{d(o.next(e))}catch(e){r(e)}}function l(e){try{d(o.throw(e))}catch(e){r(e)}}function d(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}d((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const i=n(775),r=n(200),a=n(97),l=i.default.views.dialogs,d="io.github.personalizedrefrigerator.plugin-vimrc";i.default.plugins.register({onStart:()=>o(void 0,void 0,void 0,(function*(){const e=yield l.create(`${d}jsDrawDialog`),t=`${d}.content-script`;let n=null,c=null,u=[];yield i.default.contentScripts.onMessage(t,(e=>"get-vimrc"===e.kind?(0,a.getVimrcContent)():"log-error"!==e.kind?"set-callback"===e.kind?new Promise((e=>{n=e})):e:void(e=>{u.push(e),null===c&&(c=setTimeout((()=>o(void 0,void 0,void 0,(function*(){c=null;const e=u.map((e=>` ${e}`)).join("\n");yield i.default.views.dialogs.showMessageBox("Error applying vimrc:\n"+e),u=[]}))),500))})(e.errorMessage))),yield i.default.contentScripts.register(r.ContentScriptType.CodeMirrorPlugin,t,"./contentScripts/codeMirrorPlugin.js");const s=`${d}.command-edit-vimrc`;yield i.default.commands.register({name:s,label:"Edit .vimrc",iconName:"fas fa-file-code",execute:()=>o(void 0,void 0,void 0,(function*(){const t=yield(r=e,o(void 0,void 0,void 0,(function*(){var e;yield l.setHtml(r,"\n\t\t<form name='form'>\n\t\t\t<textarea name='result' id='content' spellcheck='false'></textarea>\n\t\t</form>\n\t"),yield l.addScript(r,"./dialog/editVimrc.js"),yield l.addScript(r,"./dialog/editVimrc.css"),yield l.setButtons(r,[{id:"ok"},{id:"cancel"}]),yield l.setFitToContent(r,!1),yield i.default.views.panels.onMessage(r,(e=>o(void 0,void 0,void 0,(function*(){if("get-vimrc"===e.kind)return yield(0,a.getVimrcContent)();throw new Error("Unknown message type.")}))));const t=null===(e=(yield l.open(r)).formData)||void 0===e?void 0:e.form.result;return t&&(yield(0,a.setVimrcContent)(t)),t})));var r;t&&(null==n||n({kind:"set-vimrc",content:t}),n=null)}))})}))})},97:function(e,t,n){var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(i,r){function a(e){try{d(o.next(e))}catch(e){r(e)}}function l(e){try{d(o.throw(e))}catch(e){r(e)}}function d(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}d((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.setVimrcContent=t.getVimrcContent=void 0;const i=n(775),r=n(17),a=i.default.require("fs-extra"),l=()=>o(void 0,void 0,void 0,(function*(){const e=yield i.default.plugins.dataDir();return r.join(e,".vimrc")}));t.getVimrcContent=()=>o(void 0,void 0,void 0,(function*(){const e=yield l();return(yield a.pathExists(e))?yield a.readFile(e,"utf-8"):'\n" A .vimrc-like file. At present, very little is supported.\n" You can use the commands:\n"   inoremap, vnoremap, nnoremap\n"   imap, nmap, vmap\n"   unmap\n" Because commands are passed directly to CodeMirror\'s VIM API,\n" insert-mode mappings seem to be unable to insert text.\n"\n" Examples:\n" Allow copying/pasting with ctrl+c and ctrl+v when in insert mode.\n"   unmap <C-c>\n"   unmap <C-v>\n"\n" Map jk to Escape in insert mode:\n"   imap jk <Esc>\n'})),t.setVimrcContent=e=>o(void 0,void 0,void 0,(function*(){const t=yield l();yield a.writeFile(t,e)}))},17:e=>{e.exports=require("path")}},t={};!function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={exports:{}};return e[o].call(r.exports,r,r.exports,n),r.exports}(607)})();